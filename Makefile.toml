[tasks.run]
command = "cargo"
args = ["run"]

[tasks.clean_html]
command = "find"
args = [".", "-name", "*.html", "-delete"]

[tasks.dockerbuild]
command = "docker"
args = ["build", "-t", "algotrap:latest", "-f", "deployment/Dockerfile", "."]

[tasks.dockerrun]
dependencies = ["dockerbuild"]
command = "bash"
args = ["-c", """
  if [ ! -f .env ]; then
    echo 'Error: .env file not found.';
    exit 1;
  fi;
  docker run --rm --env-file .env algotrap
"""]

[tasks.k8s-deploy]
command = "bash"
args = ["./deployment/deploy_cronjobs.sh"]

[tasks.trigger-nightly-workflow]
command = "gh"
args = ["workflow", "run", "nightly.yml"]

[tasks.k8s-status]
command = "kubectl"
args = ["get", "all"]

[tasks.k8s-cronjob-logs]
command = "bash"
args = [
  "-c",
  """
  for job in $(kubectl get jobs -o=jsonpath='{.items[*].metadata.name}'); do
    echo "--- Logs for job: $job ---";
    pod=$(kubectl get pods -l job-name=$job -o=jsonpath='{.items[0].metadata.name}' 2>/dev/null);
    if [ -n "$pod" ]; then
      kubectl logs "$pod";
    else
      echo "No active pod found for job $job";
    fi;
    echo "--- End of logs for job: $job ---";
  done
""",
]

[tasks.k8s-cronjob-suspend]
command = "bash"
args = ["-c", """
  for job in $(kubectl get cronjobs -o=jsonpath='{.items[*].metadata.name}'); do
    kubectl patch cronjob "$job" -p '{"spec" : {"suspend" : true}}';
  done
"""]

[tasks.k8s-cronjob-resume]
command = "bash"
args = ["-c", """
  for job in $(kubectl get cronjobs -o=jsonpath='{.items[*].metadata.name}'); do
    kubectl patch cronjob "$job" -p '{"spec" : {"suspend" : false}}';
  done
"""]
